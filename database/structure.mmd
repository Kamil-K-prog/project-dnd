erDiagram
%% --- Core User & Lobby Entities ---
    users {
        int id PK "User ID"
        string name
        string email
        string password
        int current_lobby_id FK "Nullable, to track current lobby"
    }

    lobbies {
        int id PK "Lobby ID"
        int owner_id FK "The user who owns the lobby"
        string name
        string join_code
        string invite_policy "Enum: owner_only, all_members"
        bool is_frozen
    }

%% --- Prototype Entities (User's Library) ---
    characters {
        int id PK "Character Prototype ID"
        int user_id FK
        string name
        string icon_path
        json character_sheet "Stats, skills, etc."
    }

    npcs {
        int id PK "NPC Prototype ID"
        int user_id FK
        string name
        string npc_type "Enum: monster, merchant, etc."
        string icon_path
        json sheet "Stats, notes, dialogs for DM"
        int base_npc_id FK "Nullable, for variations"
    }

    items {
        int id PK "Item Prototype ID"
        int user_id FK
        string name
        string item_type "Enum: weapon, trap, key, etc."
        string dm_notes "Hidden notes for DM"
    }

    maps {
        int id PK "Map ID"
        int user_id FK
        string name
        string image_path
        int grid_size
    }

    game_templates {
        int id PK "Game Template ID"
        int user_id FK
        string name
        text scenario
    }


%% --- Game Instance Entities ---
    game_sessions {
        int id PK "Game Session ID"
        int lobby_id FK
        int game_template_id FK "Nullable"
        string status "Enum: preparing, playing, etc."
        bool is_ai_dm
        int active_map_id FK "Nullable"
    }

    game_characters {
        int id PK "Character Instance ID"
        int game_session_id FK
        int user_id FK "Player controlling this instance"
        int prototype_character_id FK "Link to original character"
        json character_sheet "Current state (HP, etc.)"
    }

    game_npcs {
        int id PK "NPC Instance ID"
        int game_session_id FK
        int prototype_npc_id FK "Link to original NPC"
        json sheet "Current state (HP, etc.)"
    }


%% --- Token Entities (Objects on Map) ---
    tokens {
        int id PK "Live Game Token"
        int game_session_id FK
        int map_id FK
        int tokenable_id "Polymorphic ID"
        string tokenable_type "Polymorphic Type"
        int pos_x
        int pos_y
        bool is_visible
    }

    template_tokens {
        int id PK "Template Token"
        int game_template_id FK
        int map_id FK
        int tokenable_id "Polymorphic ID"
        string tokenable_type "Polymorphic Type"
        int pos_x
        int pos_y
    }


%% --- Relationships ---
    users ||--o{ lobbies : "owns"
    users }o--|| lobbies : "is_in_lobby (current)"
    users ||--|{ characters : "creates_prototype"
    users ||--|{ npcs : "creates_prototype"
    users ||--|{ items : "creates_prototype"
    users ||--|{ maps : "creates"
    users ||--|{ game_templates : "creates"

    lobbies ||--o{ game_sessions : "hosts"

    game_templates }o..|| game_sessions : "is_based_on"
    game_sessions ||--|{ game_characters : "contains_instance"
    game_sessions ||--|{ game_npcs : "contains_instance"
    game_sessions ||--|{ tokens : "contains_live"

    characters }o..|| game_characters : "is_instance_of"
    npcs ||--|| game_npcs : "is_instance_of"
    users ||--|| game_characters : "plays_as"

    game_templates ||--|{ template_tokens : "defines_layout_with"
    maps ||--|{ template_tokens : "on_map"
    maps }o..|| game_sessions : "is_active_map"
    maps ||--|{ tokens : "contains_live"

%% Polymorphic relationships are harder to draw directly,
%% but they connect tokens/template_tokens to other entities.
%% 'tokens' can be a 'game_character', 'game_npc', or 'item'.
%% 'template_tokens' can be an 'npc' or 'item'.
